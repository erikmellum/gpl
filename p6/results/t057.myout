gpl.cpp::main()
  input file(tests/t057.gpl)
  random seed(42)
  read_keypresses_from_standard_input(false)
  dump_pixels(false)
  symbol_table(true)
  print_symbol_table(true)
  graphics(true)

gpl.cpp::main() Calling yyparse()


gpl.cpp::main() after call to yyparse().


Printing the symbol table from main()
int foo 0
game_object my_circle
  Circle
  {
    animation_block = animation_block(0),
    blue = double(1),
    drawing_order = int(0),
    green = double(0),
    h = int(20),
    proximity = int(4),
    radius = int(10),
    red = double(0),
    user_double = double(0),
    user_double2 = double(0),
    user_double3 = double(0),
    user_double4 = double(0),
    user_double5 = double(0),
    user_int = int(0),
    user_int2 = int(0),
    user_int3 = int(0),
    user_int4 = int(0),
    user_int5 = int(0),
    user_string = string(""),
    user_string2 = string(""),
    user_string3 = string(""),
    user_string4 = string(""),
    user_string5 = string(""),
    visible = int(1),
    w = int(20),
    x = int(42),
    y = int(11)
  }
gpl.cpp::main() Calling window->initialize().
gpl.cpp::main() Passing control to window->main_loop().

Printing the symbol table from signal_handler()
int foo 0
game_object my_circle
  Circle
  {
    animation_block = animation_block(0),
    blue = double(1),
    drawing_order = int(0),
    green = double(0),
    h = int(20),
    proximity = int(4),
    radius = int(10),
    red = double(0),
    user_double = double(0),
    user_double2 = double(0),
    user_double3 = double(0),
    user_double4 = double(0),
    user_double5 = double(0),
    user_int = int(0),
    user_int2 = int(0),
    user_int3 = int(0),
    user_int4 = int(0),
    user_int5 = int(0),
    user_string = string(""),
    user_string2 = string(""),
    user_string3 = string(""),
    user_string4 = string(""),
    user_string5 = string(""),
    visible = int(1),
    w = int(20),
    x = int(42),
    y = int(11)
  }
